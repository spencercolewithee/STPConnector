package com.avodagroup.securetransport.api.model;

/*
 * SecureTransport End-User API v1.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.4.1
 * Contact: support@axway.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import java.util.Objects;

import org.mule.runtime.extension.api.annotation.param.Parameter;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * Address book entry object. It can have custom properties with names different than specified and values of type string.
 */

public class AddressBookEntry {
	@Parameter
    private String id = null;
	
	@Parameter
    private String displayName = null;
	
	@Parameter
    private String mail = null;

	@Parameter
    private String parentGroup = null;
    /**
     * Gets or Sets type
     */
    public enum TypeEnum {
        USER("USER"),
        GROUP("GROUP");

        private String value;

        TypeEnum(String value) {
            this.value = value;
        }
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }
        public static TypeEnum fromValue(String text) {
            for (TypeEnum b : TypeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }
        public static class Adapter extends TypeAdapter<TypeEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public TypeEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return TypeEnum.fromValue(String.valueOf(value));
            }
        }
    }
    
    @Parameter
    private TypeEnum type = null;
    public AddressBookEntry id(String id) {
        this.id = id;
        return this;
    }



    /**
     * Get id
     * @return id
     **/
    public String getId() {
        return id;
    }
    public void setId(String id) {
        this.id = id;
    }
    public AddressBookEntry displayName(String displayName) {
        this.displayName = displayName;
        return this;
    }



    /**
     * Get displayName
     * @return displayName
     **/
    public String getDisplayName() {
        return displayName;
    }
    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }
    public AddressBookEntry mail(String mail) {
        this.mail = mail;
        return this;
    }



    /**
     * Get mail
     * @return mail
     **/
    public String getMail() {
        return mail;
    }
    public void setMail(String mail) {
        this.mail = mail;
    }
    public AddressBookEntry parentGroup(String parentGroup) {
        this.parentGroup = parentGroup;
        return this;
    }



    /**
     * Get parentGroup
     * @return parentGroup
     **/
    public String getParentGroup() {
        return parentGroup;
    }
    public void setParentGroup(String parentGroup) {
        this.parentGroup = parentGroup;
    }
    public AddressBookEntry type(TypeEnum type) {
        this.type = type;
        return this;
    }



    /**
     * Get type
     * @return type
     **/
    public TypeEnum getType() {
        return type;
    }
    public void setType(TypeEnum type) {
        this.type = type;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AddressBookEntry addressBookEntry = (AddressBookEntry) o;
        return Objects.equals(this.id, addressBookEntry.id) &&
                Objects.equals(this.displayName, addressBookEntry.displayName) &&
                Objects.equals(this.mail, addressBookEntry.mail) &&
                Objects.equals(this.parentGroup, addressBookEntry.parentGroup) &&
                Objects.equals(this.type, addressBookEntry.type);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(id, displayName, mail, parentGroup, type);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AddressBookEntry {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
        sb.append("    mail: ").append(toIndentedString(mail)).append("\n");
        sb.append("    parentGroup: ").append(toIndentedString(parentGroup)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
