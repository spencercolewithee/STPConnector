/*
 * SecureTransport End-User API v1.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.4.1
 * Contact: support@axway.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.avodagroup.securetransport.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
//.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * DownloadHistory
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-06-04T10:29:31.230-04:00[America/New_York]")public class DownloadHistory {

  @SerializedName("accountId")
  private String accountId = null;

  @SerializedName("userName")
  private String userName = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("address")
  private String address = null;

  @SerializedName("anonymous")
  private Boolean anonymous = false;

  @SerializedName("protocol")
  private String protocol = null;

  @SerializedName("downloadTimestamp")
  private Long downloadTimestamp = null;

  @SerializedName("fileName")
  private String fileName = null;

  @SerializedName("fileSize")
  private Long fileSize = null;

  @SerializedName("fileContentType")
  private String fileContentType = null;
  public DownloadHistory accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

  

  /**
  * The id of the account
  * @return accountId
  **/
  //(description = "The id of the account")
  public String getAccountId() {
    return accountId;
  }
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }
  public DownloadHistory userName(String userName) {
    this.userName = userName;
    return this;
  }

  

  /**
  * The user name
  * @return userName
  **/
  //(description = "The user name")
  public String getUserName() {
    return userName;
  }
  public void setUserName(String userName) {
    this.userName = userName;
  }
  public DownloadHistory email(String email) {
    this.email = email;
    return this;
  }

  

  /**
  * The email address
  * @return email
  **/
  //(description = "The email address")
  public String getEmail() {
    return email;
  }
  public void setEmail(String email) {
    this.email = email;
  }
  public DownloadHistory address(String address) {
    this.address = address;
    return this;
  }

  

  /**
  * The recipient IP address. This property is set when the delivery method is &#x60;Anonymous&#x60;
  * @return address
  **/
  //(description = "The recipient IP address. This property is set when the delivery method is `Anonymous`")
  public String getAddress() {
    return address;
  }
  public void setAddress(String address) {
    this.address = address;
  }
  public DownloadHistory anonymous(Boolean anonymous) {
    this.anonymous = anonymous;
    return this;
  }

  

  /**
  * Define whether this recipient is anonymous (true if account is anonymous, false otherwise)
  * @return anonymous
  **/
  //(description = "Define whether this recipient is anonymous (true if account is anonymous, false otherwise)")
  public Boolean isAnonymous() {
    return anonymous;
  }
  public void setAnonymous(Boolean anonymous) {
    this.anonymous = anonymous;
  }
  public DownloadHistory protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

  

  /**
  * The protocol. Value of \&quot;http\&quot; is  hard coded.
  * @return protocol
  **/
  //(description = "The protocol. Value of \"http\" is  hard coded.")
  public String getProtocol() {
    return protocol;
  }
  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }
  public DownloadHistory downloadTimestamp(Long downloadTimestamp) {
    this.downloadTimestamp = downloadTimestamp;
    return this;
  }

  

  /**
  * The download time stamp
  * @return downloadTimestamp
  **/
  //(description = "The download time stamp")
  public Long getDownloadTimestamp() {
    return downloadTimestamp;
  }
  public void setDownloadTimestamp(Long downloadTimestamp) {
    this.downloadTimestamp = downloadTimestamp;
  }
  public DownloadHistory fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

  

  /**
  * The download file name
  * @return fileName
  **/
  //(description = "The download file name")
  public String getFileName() {
    return fileName;
  }
  public void setFileName(String fileName) {
    this.fileName = fileName;
  }
  public DownloadHistory fileSize(Long fileSize) {
    this.fileSize = fileSize;
    return this;
  }

  

  /**
  * The file size
  * @return fileSize
  **/
  //(description = "The file size")
  public Long getFileSize() {
    return fileSize;
  }
  public void setFileSize(Long fileSize) {
    this.fileSize = fileSize;
  }
  public DownloadHistory fileContentType(String fileContentType) {
    this.fileContentType = fileContentType;
    return this;
  }

  

  /**
  * The file content-type.
  * @return fileContentType
  **/
  //(description = "The file content-type.")
  public String getFileContentType() {
    return fileContentType;
  }
  public void setFileContentType(String fileContentType) {
    this.fileContentType = fileContentType;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DownloadHistory downloadHistory = (DownloadHistory) o;
    return Objects.equals(this.accountId, downloadHistory.accountId) &&
        Objects.equals(this.userName, downloadHistory.userName) &&
        Objects.equals(this.email, downloadHistory.email) &&
        Objects.equals(this.address, downloadHistory.address) &&
        Objects.equals(this.anonymous, downloadHistory.anonymous) &&
        Objects.equals(this.protocol, downloadHistory.protocol) &&
        Objects.equals(this.downloadTimestamp, downloadHistory.downloadTimestamp) &&
        Objects.equals(this.fileName, downloadHistory.fileName) &&
        Objects.equals(this.fileSize, downloadHistory.fileSize) &&
        Objects.equals(this.fileContentType, downloadHistory.fileContentType);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(accountId, userName, email, address, anonymous, protocol, downloadTimestamp, fileName, fileSize, fileContentType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DownloadHistory {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    anonymous: ").append(toIndentedString(anonymous)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    downloadTimestamp: ").append(toIndentedString(downloadTimestamp)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    fileSize: ").append(toIndentedString(fileSize)).append("\n");
    sb.append("    fileContentType: ").append(toIndentedString(fileContentType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
