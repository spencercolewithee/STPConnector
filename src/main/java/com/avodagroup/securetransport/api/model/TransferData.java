/*
 * SecureTransport End-User API v1.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.4.1
 * Contact: support@axway.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.avodagroup.securetransport.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
//.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * TransferData
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-06-04T10:29:31.230-04:00[America/New_York]")public class TransferData {

  @SerializedName("type")
  private String type = null;

  @SerializedName("receipt")
  private Boolean receipt = false;

  @SerializedName("data")
  private String data = null;

  @SerializedName("startTime")
  private String startTime = null;

  @SerializedName("transferId")
  private String transferId = null;
  public TransferData type(String type) {
    this.type = type;
    return this;
  }

  

  /**
  * The data type
  * @return type
  **/
  //(description = "The data type")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }
  public TransferData receipt(Boolean receipt) {
    this.receipt = receipt;
    return this;
  }

  

  /**
  * Defines whether the data is a receipt (true if the data is receipt, false otherwise)
  * @return receipt
  **/
  //(description = "Defines whether the data is a receipt (true if the data is receipt, false otherwise)")
  public Boolean isReceipt() {
    return receipt;
  }
  public void setReceipt(Boolean receipt) {
    this.receipt = receipt;
  }
  public TransferData data(String data) {
    this.data = data;
    return this;
  }

  

  /**
  * The transfer data
  * @return data
  **/
  //(description = "The transfer data")
  public String getData() {
    return data;
  }
  public void setData(String data) {
    this.data = data;
  }
  public TransferData startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  

  /**
  * The time when the transfer started
  * @return startTime
  **/
  //(description = "The time when the transfer started")
  public String getStartTime() {
    return startTime;
  }
  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }
  public TransferData transferId(String transferId) {
    this.transferId = transferId;
    return this;
  }

  

  /**
  * The ID of the transfer.
  * @return transferId
  **/
  //(description = "The ID of the transfer.")
  public String getTransferId() {
    return transferId;
  }
  public void setTransferId(String transferId) {
    this.transferId = transferId;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransferData transferData = (TransferData) o;
    return Objects.equals(this.type, transferData.type) &&
        Objects.equals(this.receipt, transferData.receipt) &&
        Objects.equals(this.data, transferData.data) &&
        Objects.equals(this.startTime, transferData.startTime) &&
        Objects.equals(this.transferId, transferData.transferId);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(type, receipt, data, startTime, transferId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransferData {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    receipt: ").append(toIndentedString(receipt)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    transferId: ").append(toIndentedString(transferId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
