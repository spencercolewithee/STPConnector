/*
 * SecureTransport End-User API v1.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.4.1
 * Contact: support@axway.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.avodagroup.securetransport.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
//.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * PasswordPolicy
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-06-04T10:29:31.230-04:00[America/New_York]")public class PasswordPolicy {

  @SerializedName("special")
  private Integer special = null;

  @SerializedName("total")
  private Integer total = null;

  @SerializedName("alpha")
  private Integer alpha = null;

  @SerializedName("numeric")
  private Integer numeric = null;

  @SerializedName("recentPasswords")
  private Integer recentPasswords = null;
  public PasswordPolicy special(Integer special) {
    this.special = special;
    return this;
  }

  

  /**
  * the number of special characters that are required
  * @return special
  **/
  //(description = "the number of special characters that are required")
  public Integer getSpecial() {
    return special;
  }
  public void setSpecial(Integer special) {
    this.special = special;
  }
  public PasswordPolicy total(Integer total) {
    this.total = total;
    return this;
  }

  

  /**
  * the number of total characters that are required
  * @return total
  **/
  //(description = "the number of total characters that are required")
  public Integer getTotal() {
    return total;
  }
  public void setTotal(Integer total) {
    this.total = total;
  }
  public PasswordPolicy alpha(Integer alpha) {
    this.alpha = alpha;
    return this;
  }

  

  /**
  * the number of alphabetical characters that are required
  * @return alpha
  **/
  //(description = "the number of alphabetical characters that are required")
  public Integer getAlpha() {
    return alpha;
  }
  public void setAlpha(Integer alpha) {
    this.alpha = alpha;
  }
  public PasswordPolicy numeric(Integer numeric) {
    this.numeric = numeric;
    return this;
  }

  

  /**
  * the number of numeric characters that are required
  * @return numeric
  **/
  //(description = "the number of numeric characters that are required")
  public Integer getNumeric() {
    return numeric;
  }
  public void setNumeric(Integer numeric) {
    this.numeric = numeric;
  }
  public PasswordPolicy recentPasswords(Integer recentPasswords) {
    this.recentPasswords = recentPasswords;
    return this;
  }

  

  /**
  * the number of not allowed recent password
  * @return recentPasswords
  **/
  //(description = "the number of not allowed recent password")
  public Integer getRecentPasswords() {
    return recentPasswords;
  }
  public void setRecentPasswords(Integer recentPasswords) {
    this.recentPasswords = recentPasswords;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PasswordPolicy passwordPolicy = (PasswordPolicy) o;
    return Objects.equals(this.special, passwordPolicy.special) &&
        Objects.equals(this.total, passwordPolicy.total) &&
        Objects.equals(this.alpha, passwordPolicy.alpha) &&
        Objects.equals(this.numeric, passwordPolicy.numeric) &&
        Objects.equals(this.recentPasswords, passwordPolicy.recentPasswords);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(special, total, alpha, numeric, recentPasswords);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PasswordPolicy {\n");
    
    sb.append("    special: ").append(toIndentedString(special)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    alpha: ").append(toIndentedString(alpha)).append("\n");
    sb.append("    numeric: ").append(toIndentedString(numeric)).append("\n");
    sb.append("    recentPasswords: ").append(toIndentedString(recentPasswords)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
