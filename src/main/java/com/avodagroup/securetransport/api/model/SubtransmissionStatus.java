/*
 * SecureTransport End-User API v1.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.4.1
 * Contact: support@axway.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.avodagroup.securetransport.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
//.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * SubtransmissionStatus
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-06-04T10:29:31.230-04:00[America/New_York]")public class SubtransmissionStatus {

  @SerializedName("operationType")
  private String operationType = null;

  @SerializedName("completion")
  private String completion = null;

  @SerializedName("result")
  private String result = null;

  @SerializedName("comment")
  private String comment = null;
  public SubtransmissionStatus operationType(String operationType) {
    this.operationType = operationType;
    return this;
  }

  

  /**
  * The subtransmisstion operation type
  * @return operationType
  **/
  //(description = "The subtransmisstion operation type")
  public String getOperationType() {
    return operationType;
  }
  public void setOperationType(String operationType) {
    this.operationType = operationType;
  }
  public SubtransmissionStatus completion(String completion) {
    this.completion = completion;
    return this;
  }

  

  /**
  * The operation status value
  * @return completion
  **/
  //(description = "The operation status value")
  public String getCompletion() {
    return completion;
  }
  public void setCompletion(String completion) {
    this.completion = completion;
  }
  public SubtransmissionStatus result(String result) {
    this.result = result;
    return this;
  }

  

  /**
  * The result of the operation (usually a filename)
  * @return result
  **/
  //(description = "The result of the operation (usually a filename)")
  public String getResult() {
    return result;
  }
  public void setResult(String result) {
    this.result = result;
  }
  public SubtransmissionStatus comment(String comment) {
    this.comment = comment;
    return this;
  }

  

  /**
  * The subtransmission comment.
  * @return comment
  **/
  //(description = "The subtransmission comment.")
  public String getComment() {
    return comment;
  }
  public void setComment(String comment) {
    this.comment = comment;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubtransmissionStatus subtransmissionStatus = (SubtransmissionStatus) o;
    return Objects.equals(this.operationType, subtransmissionStatus.operationType) &&
        Objects.equals(this.completion, subtransmissionStatus.completion) &&
        Objects.equals(this.result, subtransmissionStatus.result) &&
        Objects.equals(this.comment, subtransmissionStatus.comment);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(operationType, completion, result, comment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubtransmissionStatus {\n");
    
    sb.append("    operationType: ").append(toIndentedString(operationType)).append("\n");
    sb.append("    completion: ").append(toIndentedString(completion)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
